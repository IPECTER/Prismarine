From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@outlook.com>
Date: Sat, 2 Jul 2022 18:02:41 +0900
Subject: [PATCH] Patina tweaks

Original by foss-mc <69294560+foss-mc@users.noreply.github.com>
Copyright (C) 2022 PatinaMC LLC

[ADDED PATCHES]
0010 - remove TickTask
0012 - don't create new random instance
0013 - completely remove bootstrapExecutor

diff --git a/src/main/java/net/minecraft/Util.java b/src/main/java/net/minecraft/Util.java
index cdb7aea969b56f59d88f60bc3744e4932228c50a..3c7c3c21fe1f4ce1299274eee82884cb8aa2d2e7 100644
--- a/src/main/java/net/minecraft/Util.java
+++ b/src/main/java/net/minecraft/Util.java
@@ -207,7 +207,7 @@ public class Util {
     }
 
     public static ExecutorService bootstrapExecutor() {
-        return BOOTSTRAP_EXECUTOR;
+        return (net.prismarineteam.prismarine.PrismarineConfig.disableBootstrapExecutor ? BACKGROUND_EXECUTOR : BOOTSTRAP_EXECUTOR); // Patina // Prismarine - Patina patches
     }
 
     public static ExecutorService backgroundExecutor() {
diff --git a/src/main/java/net/minecraft/server/rcon/thread/QueryThreadGs4.java b/src/main/java/net/minecraft/server/rcon/thread/QueryThreadGs4.java
index 1ef089dbf83de35d875c00efdf468c397be56978..d867232390c012d5eae2182fc73095aae5ed3409 100644
--- a/src/main/java/net/minecraft/server/rcon/thread/QueryThreadGs4.java
+++ b/src/main/java/net/minecraft/server/rcon/thread/QueryThreadGs4.java
@@ -349,7 +349,7 @@ public class QueryThreadGs4 extends GenericThread {
             this.identBytes[2] = bs[5];
             this.identBytes[3] = bs[6];
             this.ident = new String(this.identBytes, StandardCharsets.UTF_8);
-            this.challenge = RandomSource.create().nextInt(16777216);
+            this.challenge = java.util.concurrent.ThreadLocalRandom.current().nextInt(16777216); // Patina // Prismarine - Patina patches
             this.challengeBytes = String.format(Locale.ROOT, "\t%s%d\u0000", this.ident, this.challenge).getBytes(StandardCharsets.UTF_8);
         }
 
diff --git a/src/main/java/net/prismarineteam/prismarine/PrismarineConfig.java b/src/main/java/net/prismarineteam/prismarine/PrismarineConfig.java
index 40e5718ed69146cbf1aef7819bda1b8822e2499d..eb01aab61aa3383e39120c7dfb60d9c9a4b801d1 100644
--- a/src/main/java/net/prismarineteam/prismarine/PrismarineConfig.java
+++ b/src/main/java/net/prismarineteam/prismarine/PrismarineConfig.java
@@ -50,8 +50,8 @@ public class PrismarineConfig {
         commands = new HashMap<>();
         commands.put("prismarine", new PrismarineCommand("prismarine"));
 
-        version = getInt("config-version", 1);
-        set("config-version", 1);
+        version = getInt("config-version", 3);
+        set("config-version", 3);
 
         readConfig(PrismarineConfig.class, null);
     }
@@ -145,4 +145,13 @@ public class PrismarineConfig {
         }
         return builder.build();
     }
+    
+    public static boolean disableBootstrapExecutor = false;
+    private static void disableBootstrapExecutor() {
+        disableBootstrapExecutor = getBoolean("settings.disable-bootstrap-executor", disableBootstrapExecutor);
+        if (version < 3) {
+            set("settings.disable-bootstrap-executor", getBoolean("settings.patina-settings.disable-bootstrap-executor", false));
+            set("settings.patina-settings.disable-bootstrap-executor", null);
+        }
+    }
 }
\ No newline at end of file
