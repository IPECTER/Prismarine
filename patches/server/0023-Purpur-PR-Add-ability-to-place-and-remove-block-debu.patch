From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@outlook.com>
Date: Wed, 27 Jul 2022 01:50:18 +0900
Subject: [PATCH] Purpur PR - Add ability to place and remove block debug
 markers for players

Original by YouHaveTrouble <youhavetrouble@youhavetrouble.me> (PurpurMC/Purpur#1072)

Copyright (c) 2022 PurpurMC LLC

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 307d6782eb854c74ddbea0de8528f56c8a95c4dd..de34d23628c8418d6d4a6f2bc83b10cf375bc424 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -2957,5 +2957,57 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     public boolean hasFlyingFallDamage() {
         return getHandle().flyingFallDamage;
     }
+
+    // Prismarine start - Purpur PR
+    @Override
+    public void sendBlockHighlight(Location location, String text, int time, int color) {
+        if (this.getHandle().connection == null) return;
+        io.netty.buffer.ByteBuf packet = io.netty.buffer.Unpooled.buffer();
+        //write location
+        packet.writeLong(((long) location.getX() & 67108863L) << 38 | (long) location.getY() & 4095L | ((long) location.getZ() & 67108863L) << 12);
+        //write color
+        packet.writeInt(color);
+        // write text
+        byte[] string = text.getBytes(java.nio.charset.StandardCharsets.UTF_8);
+        int i = string.length;
+        while ((i & -128) != 0) {
+            packet.writeByte(i & 127 | 128);
+            i >>>= 7;
+        }
+        packet.writeByte(i);
+        packet.writeBytes(string);
+        // write time
+        packet.writeInt(time);
+        net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket customPayloadPacket = new net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket(ClientboundCustomPayloadPacket.DEBUG_GAME_TEST_ADD_MARKER, new FriendlyByteBuf(packet));
+        this.getHandle().connection.send(customPayloadPacket);
+    }
+
+    @Override
+    public void sendBlockHighlight(Location location, int time, org.bukkit.Color color, int transparency) {
+        int colorInt = (transparency & 255) << 24 | (color.getRed() & 255) << 16 | (color.getGreen() & 255) << 8 | (color.getBlue() & 255);
+        sendBlockHighlight(location, "", time, colorInt);
+    }
+
+    @Override
+    public void sendBlockHighlight(Location location, int time, int color) {
+        sendBlockHighlight(location, "", time, color);
+    }
+
+    @Override
+    public void sendBlockHighlight(Location location, String text, int time) {
+        sendBlockHighlight(location, text, time, 0x6400FF00);
+    }
+
+    @Override
+    public void sendBlockHighlight(Location location, int time) {
+        sendBlockHighlight(location, "", time, 0x6400FF00);
+    }
+
+    @Override
+    public void clearBlockHighlights() {
+        net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket customPayloadPacket = new net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket(ClientboundCustomPayloadPacket.DEBUG_GAME_TEST_CLEAR, new FriendlyByteBuf(io.netty.buffer.Unpooled.wrappedBuffer(new byte[0])));
+        this.getHandle().connection.send(customPayloadPacket);
+    }
+    // Prismarine end
     // Purpur end
 }
