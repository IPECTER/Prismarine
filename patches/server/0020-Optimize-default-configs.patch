From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@outlook.com>
Date: Sun, 10 Jul 2022 18:59:37 +0900
Subject: [PATCH] Optimize default configs


diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index e2c612dd55fcb2769fb06f7878b8d0873f2be139..c06a765638d3ddd03cc641f0d78da740be67e9e2 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -310,7 +310,7 @@ public class WorldConfiguration extends ConfigurationPart {
     public class Environment extends ConfigurationPart {
         public boolean disableThunder = false;
         public boolean disableIceAndSnow = false;
-        public boolean optimizeExplosions = false;
+        public boolean optimizeExplosions = true; // Prismarine - Optimize config
         public boolean disableExplosionKnockback = false;
         public boolean generateFlatBedrock = false;
         public FrostedIce frostedIce;
@@ -389,7 +389,7 @@ public class WorldConfiguration extends ConfigurationPart {
     public class Collisions extends ConfigurationPart {
         public boolean onlyPlayersCollide = false;
         public boolean allowVehicleCollisions = true;
-        public boolean fixClimbingBypassingCrammingRule = false;
+        public boolean fixClimbingBypassingCrammingRule = true; // Prismarine - Optimize config
         @RequiresSpigotInitialization(MaxEntityCollisionsInitializer.class)
         public int maxEntityCollisions = 8;
         public boolean allowPlayerCrammingDamage = false;
@@ -401,7 +401,7 @@ public class WorldConfiguration extends ConfigurationPart {
         public AutosavePeriod autoSaveInterval = AutosavePeriod.def();
         public int maxAutoSaveChunksPerTick = 24;
         public int fixedChunkInhabitedTime = -1;
-        public boolean preventMovingIntoUnloadedChunks = false;
+        public boolean preventMovingIntoUnloadedChunks = true; // Prismarine - Optimize config
         public Duration delayChunkUnloadsBy = Duration.of("10s");
         public Reference2IntMap<EntityType<?>> entityPerChunkSaveLimit = Util.make(new Reference2IntOpenHashMap<>(Registry.ENTITY_TYPE.size()), map -> {
             map.defaultReturnValue(-1);
@@ -452,7 +452,7 @@ public class WorldConfiguration extends ConfigurationPart {
         public int lightQueueSize = 20;
         public boolean updatePathfindingOnBlockUpdate = true;
         public boolean showSignClickCommandFailureMsgsToPlayer = false;
-        public RedstoneImplementation redstoneImplementation = RedstoneImplementation.VANILLA;
+        public RedstoneImplementation redstoneImplementation = RedstoneImplementation.ALTERNATE_CURRENT; // Prismarine - Optimize config
         public boolean disableEndCredits = false;
         public float maxLeashDistance = 10f;
         public boolean disableSprintInterruptionOnAttack = false;
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
index 88900f7a2077049cc5d78fe17314dbdf57d64a08..71d6bc1a5dd6fc4c28fb81b8c02bda874ae54a0a 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
@@ -121,16 +121,16 @@ public class DedicatedServerProperties extends Settings<DedicatedServerPropertie
         this.allowNether = this.get("allow-nether", true);
         this.spawnMonsters = this.get("spawn-monsters", true);
         this.useNativeTransport = this.get("use-native-transport", true);
-        this.enableCommandBlock = this.get("enable-command-block", false);
-        this.spawnProtection = this.get("spawn-protection", 16);
+        this.enableCommandBlock = this.get("enable-command-block", true); // Prismarine - Optimize config
+        this.spawnProtection = this.get("spawn-protection", 0); // Prismarine - Optimize config
         this.opPermissionLevel = this.get("op-permission-level", 4);
         this.functionPermissionLevel = this.get("function-permission-level", 2);
         this.maxTickTime = this.get("max-tick-time", TimeUnit.MINUTES.toMillis(1L));
         this.maxChainedNeighborUpdates = this.get("max-chained-neighbor-updates", 1000000);
         this.rateLimitPacketsPerSecond = this.get("rate-limit", 0);
-        this.viewDistance = this.get("view-distance", 10);
-        this.simulationDistance = this.get("simulation-distance", 10);
-        this.maxPlayers = this.get("max-players", 20);
+        this.viewDistance = this.get("view-distance", 7); // Prismarine - Optimize config
+        this.simulationDistance = this.get("simulation-distance", 4); // Prismarine - Optimize config
+        this.maxPlayers = this.get("max-players", Integer.MAX_VALUE); // Prismarine - Optimize config
         this.networkCompressionThreshold = this.get("network-compression-threshold", 256);
         this.broadcastRconToOps = this.get("broadcast-rcon-to-ops", true);
         this.broadcastConsoleToOps = this.get("broadcast-console-to-ops", true);
diff --git a/src/main/java/org/purpurmc/purpur/PurpurConfig.java b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
index 8f65dfb8d29632d44c2b0b118881fc83e52d9ba6..0397e90c9a3c7a53f3cc9d4f404b5eb4a6338e1f 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
@@ -253,7 +253,7 @@ public class PurpurConfig {
         laggingThreshold = getDouble("settings.lagging-threshold", laggingThreshold);
     }
 
-    public static boolean useAlternateKeepAlive = false;
+    public static boolean useAlternateKeepAlive = true; // Prismarine - Optimize config
     private static void useAlternateKeepAlive() {
         useAlternateKeepAlive = getBoolean("settings.use-alternate-keepalive", useAlternateKeepAlive);
     }
diff --git a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
index 7a37bdc4a926bc7e8140331a98fe5e2a17b2ffaf..6b223ab7ddf8208bfab1db925c33926ec9f2acaf 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
@@ -414,7 +414,7 @@ public class PurpurWorldConfig {
     public boolean playerInvulnerableWhileAcceptingResourcePack = false;
     public String playerDeathExpDropEquation = "expLevel * 7";
     public int playerDeathExpDropMax = 100;
-    public boolean teleportIfOutsideBorder = false;
+    public boolean teleportIfOutsideBorder = true; // Prismarine - Optimize config
     public boolean totemOfUndyingWorksInInventory = false;
     public boolean playerFixStuckPortal = false;
     public boolean creativeOnePunch = false;
