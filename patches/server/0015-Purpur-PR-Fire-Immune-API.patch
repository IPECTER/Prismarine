From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alpha <alphakr93@outlook.com>
Date: Sun, 13 Feb 2022 14:29:07 +0900
Subject: [PATCH] Purpur PR - Fire Immune API

Original by Racci <90304606+DaRacci@users.noreply.github.com> (PurpurMC/Purpur#891)

Copyright (c) 2022 PurpurMC LLC

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 4985a7bf2c6a05db69482d04337597298aea66fc..610eb510dd7972234d51dc5e4865e3a22f587470 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -399,6 +399,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     @javax.annotation.Nullable
     private UUID originWorld;
     public boolean freezeLocked = false; // Paper - Freeze Tick Lock API
+    public @Nullable Boolean immuneToFire = null; // Purpur - add fire immune API // Prismarine - Purpur PR
 
     public void setOrigin(@javax.annotation.Nonnull Location location) {
         this.origin = location.toVector();
@@ -1660,7 +1661,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     }
 
     public boolean fireImmune() {
-        return this.getType().fireImmune();
+        return this.immuneToFire != null ? immuneToFire : this.getType().fireImmune(); // Purpur - add fire immune API // Prismarine - Purpur PR
     }
 
     public boolean causeFallDamage(float fallDistance, float damageMultiplier, DamageSource damageSource) {
@@ -2296,6 +2297,13 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                 nbt.putBoolean("Paper.FreezeLock", true);
             }
             // Paper end
+            // Prismarine start - Purpur PR
+            // Purpur start
+            if (immuneToFire != null) {
+                nbt.putBoolean("Purpur.FireImmune", immuneToFire);
+            }
+            // Purpur end
+            // Prismarine end
             return nbt;
         } catch (Throwable throwable) {
             CrashReport crashreport = CrashReport.forThrowable(throwable, "Saving entity NBT");
@@ -2463,6 +2471,13 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                 freezeLocked = nbt.getBoolean("Paper.FreezeLock");
             }
             // Paper end
+            // Prismarine start - Purpur PR
+            // Purpur start
+            if (nbt.contains("Purpur.FireImmune")) {
+                immuneToFire = nbt.getBoolean("Purpur.FireImmune");
+            }
+            // Purpur end
+            // Prismarine end
 
         } catch (Throwable throwable) {
             CrashReport crashreport = CrashReport.forThrowable(throwable, "Loading entity NBT");
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index 8a728818913ec4eae440ef75efa55b84d2b94ccf..186593bcd22fcf195011fc55c66c466390606b58 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -1386,5 +1386,17 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
     public boolean isRidableInWater() {
         return getHandle().rideableUnderWater();
     }
+
+    // Prismarine start - Purpur PR
+    @Override
+    public boolean isImmuneToFire() {
+        return getHandle().fireImmune();
+    }
+
+    @Override
+    public void setImmuneToFire(Boolean fireImmune) {
+        getHandle().immuneToFire = fireImmune;
+    }
+    // Prismarine end
     // Purpur end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftItem.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftItem.java
index f3bf5199bc7ddf8a3d0dc67a184e7690efa659eb..327fbf26c6fe8c0ce62fe486133b77ff5e3e1a98 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftItem.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftItem.java
@@ -170,9 +170,16 @@ public class CraftItem extends CraftEntity implements Item {
         return item.immuneToExplosion;
     }
 
+    // Prismarine start
+    @Override
+    public void setImmuneToFire(@org.jetbrains.annotations.Nullable Boolean immuneToFire) {
+        item.immuneToFire = (immuneToFire != null && immuneToFire);
+    }
+    // Prismarine end
+
     @Override
     public void setImmuneToFire(boolean immuneToFire) {
-        item.immuneToFire = immuneToFire;
+        this.setImmuneToFire((Boolean) immuneToFire); // Prismarine
     }
 
     @Override
