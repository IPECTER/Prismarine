name: Build Testing
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        jdk: [17.0.2]
        #         java: ['temurin', 'zulu', 'microsoft', 'liberica']
        java: ['temurin']
        os: [ubuntu-20.04]

    if: "contains(github.event.commits[0].message, '[CI_ TEMPORARY_TESTING]')"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK ${{ matrix.java }} ${{ matrix.jdk }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.java }}
          java-version: ${{ matrix.jdk }}

      - name: Configure Git
        run: |
          git config --global user.email "no-reply@github.com" && git config --global user.name "Github Actions"

      - name: Get build number
        run: |
          git clone --recursive -b meta https://github.com/PrismarineTeam/PrismarineManager
          release=$(cat PrismarineManager/release-data | grep release | sed 's/release: //')
          version=$(cat PrismarineManager/release-data | grep version | sed 's/version: //')
          echo "version=$version" > $GITHUB_ENV
          echo "release=$(($release + 1))" > $GITHUB_ENV
          echo ${{ env.release }} && echo ${{ env.version }}
          sed -i 's/release: .*/release: '"${{ env.release }}"'/' PrismarineManager/release-data
          cd PrismarineManager && git add . && git commit -m "Update build number"

      - name: Push build number changes
        uses: ad-m/github-push-action@master
        with: 
          github_token: ${{ secrets.PUSH_TOKEN }}
          directory: PrismarineManager
          repository: PrismarineTeam/PrismarineManager
          branch: meta

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: build/libs
