name: Build Prismarine
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  release:
    strategy:
      matrix:
        jdk: [17.0.2]
        #         java: ['temurin', 'zulu', 'microsoft', 'liberica']
        java: ['temurin']
        os: [ubuntu-20.04]

    if: !startsWith(github.event.commits[0].message, '[CI-Skip]') && !contains(github.event.commits[0].message, '[CI_TEMPORARY_TESTING]')
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK ${{ matrix.java }} ${{ matrix.jdk }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.java }}
          java-version: ${{ matrix.jdk }}

      - name: Configure Git
        run: |
          git config --global user.email "no-reply@github.com" && git config --global user.name "Github Actions"
          echo "workflow=$GITHUB_RUN_NUMBER" >> $GITHUB_ENV

      - name: Apply Patches
        run: ./gradlew applyPatches --stacktrace

      - name: Build
        run: ./gradlew build --stacktrace

      - name: Create Reobf Jar
        run: ./gradlew createReobfPaperclipJar --stacktrace

      - name: Create Mojmap Jar
        run: ./gradlew createMojmapPaperclipJar --stacktrace

      - name: Get build number
        run: |
          git clone --recursive -b meta https://github.com/PrismarineTeam/PrismarineManager
          release=$(cat PrismarineManager/release-data | grep release | sed 's/release: //')
          version=$(cat PrismarineManager/release-data | grep version | sed 's/version: //')
          echo "version=$version" > $GITHUB_ENV
          echo "release=$(($release + 1))" > $GITHUB_ENV
          echo $version && echo $release
          sed -i 's/release: .*/release: '"${{ env.release }}"'/' PrismarineManager/release-data
          cd PrismarineManager && git add . && git commit -m "Update build number"

      - name: Push build number changes
        uses: ad-m/github-push-action@master
        with: 
          github_token: ${{ secrets.PUSH_TOKEN }}
          directory: PrismarineManager
          repository: PrismarineTeam/PrismarineManager
          branch: meta

      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Artifacts
          path: build/libs

      - name: Release Artifacts
        if: ${{ runner.os == 'Linux' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: "Release #${{ env.release }}"
          automatic_release_tag: release-${{ env.version }}-${{ env.release }}
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          files: build/libs/*.jar
          prerelease: false
          
      - name: Release Artifacts (Latest)
        if: ${{ runner.os == 'Linux' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: "Release #${{ env.release }}"
          automatic_release_tag: latest
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          files: build/libs/*.jar
          prerelease: false
